# NOTE: update this with your service name
service: server

# Use the serverless-webpack plugin to transpile ES6
plugins:
  - serverless-offline

# serverless-webpack configuration
# Enable auto-packing of external modules

provider:
  name: aws
  runtime: nodejs12.x
  stage: ${opt:stage}
  region: us-west-2

  # 'iamRoleStatements' defines the permission policy for the Lambda function.
  # In this case Lambda functions are granted with permissions to access DynamoDB.
  iamRoleStatements:
    - Effect: Allow
      Action:
        - lambda:InvokeFunction
      Resource: '*'

resources:
  Resources:
    ApiGatewayRestApi:
      Type: AWS::ApiGateway::RestApi
      Properties:
        Name: bluezone

    CognitoUserPool:
      Type: AWS::Cognito::UserPool
      Properties:
        UserPoolName: bluezone-user-pool
        UsernameAttributes:
          - email
        AutoVerifiedAttributes:
          - email

  Outputs:
    UserPoolId:
      Value:
        Ref: CognitoUserPool

    UserPoolArn:
      Value:
        Fn::GetAtt: [CognitoUserPool, Arn]
      Export:
        Name: CognitoUserPool-arn

    apiGatewayRestApiId:
      Value:
        Ref: ApiGatewayRestApi
      Export:
        Name: apiGateway-restApiId

    apiGatewayRestApiRootResourceId:
      Value:
        Fn::GetAtt:
          - ApiGatewayRestApi
          - RootResourceId
      Export:
        Name: apiGateway-rootResourceId
